@model Cascading.Core.Models.Entites.Product





<div class="container py-5">
    <div class="text-center mb-5">
        <h2 class="display-5 text-primary">Cascading Dropdown Demo</h2>
        <p class="text-muted">Select a category to see related products</p>
    </div>

    <div class="row justify-content-center">
        <div class="col-md-5 mb-4">
            <label for="categoryId" class="form-label fw-bold">Category</label>
            <select asp-for="CategoryId" class="form-select shadow-sm" id="categoryId" asp-items="@ViewBag.categories">
                <option disabled selected>--Select Category--</option>
            </select>
        </div>

        <div class="col-md-5 mb-4">
            <label for="productsId" class="form-label fw-bold">Product</label>
            <select asp-for="Id" class="form-select shadow-sm" id="productsId">
                <option disabled selected>--Select Product--</option>
            </select>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            getProductByCategoryId();
        });

        $("#categoryId").change(function () {
            getProductByCategoryId();
        });

        function getProductByCategoryId() {
            $.ajax({
                url: '@Url.Action("GetProductByCategoryId", "Home")',
                type: "GET",
                data: { categoryId: $('#categoryId').val() },
                success: function (data) {
                    // Clear previous products from dropdown
                    $("#productsId").empty();
                    // Add a default option
                    $("#productsId").append('<option disabled selected>--Select Product--</option>');

                    // Populate products based on response data
                    $.each(data, function (index, product) {
                        $("#productsId").append(
                            $('<option>', {
                                value: product.id, // Assuming data has `id` and `name` properties
                                text: product.name
                            })
                        );
                    });
                },
                error: function (xhr, status, error) {
                    console.error("Error:", error);
                }
            });
        }
    </script>
}